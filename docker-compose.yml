version: '3'
services:
  bd-service:
    image: deniso4ka/bd-service:1.0
    build:
      context: ./BdService
      dockerfile: Dockerfile
    container_name: bd-service-container
    ports:
      - "8081:8081"
    environment:
      DB_HOST_SOURCE: "postgres"
      DB_PORT_SOURCE: "5432"
      DB_NAME_SOURCE: "BigData"
      DB_USER_NAME_SOURCE: "postgres"
      DB_PASSWORD_SOURCE: "denis"
      NUMBER_OF_THREADS_SOURCE: 8
    networks:
      - services-network
    depends_on:
      - postgres

  kafka-service:
    image: deniso4ka/kafka-service:1.0
    build:
      context: ./KafkaService
      dockerfile: Dockerfile
    container_name: kafka-service-container
    ports:
      - "8083:8083"
    environment:
      URL_BD_SERVICE_SOURCE: "http://bd-service:8081"
      KAFKA_BOOTSTRAP_SERVERS_SOURCE: "kafka:9092"
    networks:
      - services-network
    depends_on:
      - kafka

  pulling-data-service:
    image: deniso4ka/pulling-data-service:1.0
    build:
      context: ./pullingDataService
      dockerfile: Dockerfile
    container_name: pulling-data-service-container
    ports:
      - "8082:8082"
    environment:
      NUMBER_OF_THREADS_SOURCE: "8"
      CHUNK_SIZE_SOURCE: "1000"
      URL_VK_SERVICE_SOURCE: "http://vk-service:8080"
      URL_KAFKA_SERVICE_SOURCE: "http://kafka-service:8083"
    networks:
      - services-network

  sort-and-analyze-service:
    image: deniso4ka/sort-and-analyze-service:1.0
    build:
      context: ./sortAndAnalyzeService
      dockerfile: Dockerfile
    container_name: sort-and-analyze-service-container
    ports:
      - "8084:8084"
    environment:
      URL_BD_SERVICE_SOURCE: "http://bd-service:8081"
    networks:
      - services-network

  vk-service:
    image: deniso4ka/vk-service:1.0
    build:
      context: ./vkService
      dockerfile: Dockerfile
    container_name: vk-service-container
    ports:
      - "8080:8080"
    environment:
      ACCESS_TOKEN_SOURCE: "vk1.a.NJ2K2wfxRvy1dgdF1Xq593N7USPpZW5ghkH_YfFcdujscpVstieclYvGNOzahuPr5Z4OVO6YrErW4aGh5LkrHzN-jxDrjFkHjYo-XoTOY3ayjXtm99UCaXnSx7IFkyuHnfZtXXI_yROzBDghZLzYDCdNiobCpUvKgkNCspJz34IeyzR7fMRjqtfipQLq6GYI"
    networks:
      - services-network

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    container_name: zookeeper-container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - services-network

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    container_name: kafka-container
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - services-network
    volumes:
      - 'E:/pet-projects/kafka-container-data:/var/lib/kafka/data'

  postgres:
    image: 'postgres:16'
    container_name: postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "denis"
      POSTGRES_DB: "BigData"
    networks:
      - services-network
    volumes:
      - 'E:/pet-projects/postgres-container-data:/var/lib/postgresql/data'

networks:
  services-network:
    driver: bridge